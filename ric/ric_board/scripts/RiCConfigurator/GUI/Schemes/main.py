# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created: Thu Jun 11 16:05:28 2015
#      by: PyQt4 UI code generator 4.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(923, 700)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMouseTracking(False)
        MainWindow.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/icon.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet(_fromUtf8("QWidget#centralwidget, #statusbar{\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:0.682, x2:0.966825, y2:0, stop:0 rgba(224, 224, 224, 255), stop:1 rgba(171, 171, 171, 255));\n"
"}\n"
""))
        MainWindow.setTabShape(QtGui.QTabWidget.Rounded)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setStyleSheet(_fromUtf8(""))
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.devList = QtGui.QListWidget(self.centralwidget)
        self.devList.setGeometry(QtCore.QRect(10, 90, 256, 491))
        self.devList.setFrameShadow(QtGui.QFrame.Sunken)
        self.devList.setLineWidth(1)
        self.devList.setObjectName(_fromUtf8("devList"))
        self.Edit = QtGui.QPushButton(self.centralwidget)
        self.Edit.setGeometry(QtCore.QRect(10, 590, 98, 27))
        self.Edit.setObjectName(_fromUtf8("Edit"))
        self.Delete = QtGui.QPushButton(self.centralwidget)
        self.Delete.setGeometry(QtCore.QRect(170, 590, 98, 27))
        self.Delete.setObjectName(_fromUtf8("Delete"))
        self.DevFrame = QtGui.QFrame(self.centralwidget)
        self.DevFrame.setGeometry(QtCore.QRect(300, 90, 611, 491))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DevFrame.sizePolicy().hasHeightForWidth())
        self.DevFrame.setSizePolicy(sizePolicy)
        self.DevFrame.setBaseSize(QtCore.QSize(0, 0))
        self.DevFrame.setAccessibleName(_fromUtf8(""))
        self.DevFrame.setAutoFillBackground(False)
        self.DevFrame.setFrameShape(QtGui.QFrame.Panel)
        self.DevFrame.setFrameShadow(QtGui.QFrame.Raised)
        self.DevFrame.setLineWidth(1)
        self.DevFrame.setObjectName(_fromUtf8("DevFrame"))
        self.formLayout = QtGui.QFormLayout(self.DevFrame)
        self.formLayout.setFieldGrowthPolicy(QtGui.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setObjectName(_fromUtf8("formLayout"))
        self.label = QtGui.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(300, 60, 101, 31))
        self.label.setObjectName(_fromUtf8("label"))
        self.label_2 = QtGui.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 60, 91, 31))
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.nameSpace = QtGui.QLineEdit(self.centralwidget)
        self.nameSpace.setGeometry(QtCore.QRect(100, 40, 141, 21))
        self.nameSpace.setStatusTip(_fromUtf8(""))
        self.nameSpace.setWhatsThis(_fromUtf8(""))
        self.nameSpace.setInputMask(_fromUtf8(""))
        self.nameSpace.setText(_fromUtf8(""))
        self.nameSpace.setObjectName(_fromUtf8("nameSpace"))
        self.label_3 = QtGui.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 40, 91, 21))
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.pushButton = QtGui.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(300, 590, 611, 31))
        self.pushButton.setObjectName(_fromUtf8("pushButton"))
        self.label_4 = QtGui.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 10, 91, 21))
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.fileName = QtGui.QLineEdit(self.centralwidget)
        self.fileName.setGeometry(QtCore.QRect(100, 10, 141, 21))
        self.fileName.setObjectName(_fromUtf8("fileName"))
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 923, 25))
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFlie = QtGui.QMenu(self.menubar)
        self.menuFlie.setObjectName(_fromUtf8("menuFlie"))
        self.menuAdd_Device = QtGui.QMenu(self.menubar)
        self.menuAdd_Device.setObjectName(_fromUtf8("menuAdd_Device"))
        self.menuRiC_Device = QtGui.QMenu(self.menuAdd_Device)
        self.menuRiC_Device.setObjectName(_fromUtf8("menuRiC_Device"))
        self.menuMotors = QtGui.QMenu(self.menuRiC_Device)
        self.menuMotors.setObjectName(_fromUtf8("menuMotors"))
        self.menuClose_Loop = QtGui.QMenu(self.menuMotors)
        self.menuClose_Loop.setObjectName(_fromUtf8("menuClose_Loop"))
        self.menuDifferential_Drive = QtGui.QMenu(self.menuRiC_Device)
        self.menuDifferential_Drive.setObjectName(_fromUtf8("menuDifferential_Drive"))
        self.menuClose_Loop_Drive = QtGui.QMenu(self.menuDifferential_Drive)
        self.menuClose_Loop_Drive.setObjectName(_fromUtf8("menuClose_Loop_Drive"))
        self.menuExternal_Device = QtGui.QMenu(self.menuAdd_Device)
        self.menuExternal_Device.setObjectName(_fromUtf8("menuExternal_Device"))
        self.menuOther = QtGui.QMenu(self.menuAdd_Device)
        self.menuOther.setObjectName(_fromUtf8("menuOther"))
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        MainWindow.setMenuBar(self.menubar)
        self.actionNew = QtGui.QAction(MainWindow)
        self.actionNew.setObjectName(_fromUtf8("actionNew"))
        self.actionOpen = QtGui.QAction(MainWindow)
        self.actionOpen.setObjectName(_fromUtf8("actionOpen"))
        self.actionSave = QtGui.QAction(MainWindow)
        self.actionSave.setObjectName(_fromUtf8("actionSave"))
        self.actionExit = QtGui.QAction(MainWindow)
        self.actionExit.setObjectName(_fromUtf8("actionExit"))
        self.actionAbout_RIC = QtGui.QAction(MainWindow)
        self.actionAbout_RIC.setObjectName(_fromUtf8("actionAbout_RIC"))
        self.actionRiC_Board_Ports = QtGui.QAction(MainWindow)
        self.actionRiC_Board_Ports.setObjectName(_fromUtf8("actionRiC_Board_Ports"))
        self.actionRe_program_RiC_board = QtGui.QAction(MainWindow)
        self.actionRe_program_RiC_board.setObjectName(_fromUtf8("actionRe_program_RiC_board"))
        self.actionBattery_Monitor = QtGui.QAction(MainWindow)
        self.actionBattery_Monitor.setObjectName(_fromUtf8("actionBattery_Monitor"))
        self.actionServo = QtGui.QAction(MainWindow)
        self.actionServo.setObjectName(_fromUtf8("actionServo"))
        self.actionSwitch = QtGui.QAction(MainWindow)
        self.actionSwitch.setObjectName(_fromUtf8("actionSwitch"))
        self.actionIMU = QtGui.QAction(MainWindow)
        self.actionIMU.setObjectName(_fromUtf8("actionIMU"))
        self.actionPPM = QtGui.QAction(MainWindow)
        self.actionPPM.setObjectName(_fromUtf8("actionPPM"))
        self.actionGPS = QtGui.QAction(MainWindow)
        self.actionGPS.setObjectName(_fromUtf8("actionGPS"))
        self.actionRelay = QtGui.QAction(MainWindow)
        self.actionRelay.setObjectName(_fromUtf8("actionRelay"))
        self.actionURF = QtGui.QAction(MainWindow)
        self.actionURF.setObjectName(_fromUtf8("actionURF"))
        self.actionOpen_Loop = QtGui.QAction(MainWindow)
        self.actionOpen_Loop.setObjectName(_fromUtf8("actionOpen_Loop"))
        self.actionOpen_Loop_Drive = QtGui.QAction(MainWindow)
        self.actionOpen_Loop_Drive.setObjectName(_fromUtf8("actionOpen_Loop_Drive"))
        self.actionMotor_with_one_encoder = QtGui.QAction(MainWindow)
        self.actionMotor_with_one_encoder.setObjectName(_fromUtf8("actionMotor_with_one_encoder"))
        self.actionMotor_with_two_encoder = QtGui.QAction(MainWindow)
        self.actionMotor_with_two_encoder.setObjectName(_fromUtf8("actionMotor_with_two_encoder"))
        self.actionUSB_Camera = QtGui.QAction(MainWindow)
        self.actionUSB_Camera.setObjectName(_fromUtf8("actionUSB_Camera"))
        self.actionOPENNI = QtGui.QAction(MainWindow)
        self.actionOPENNI.setObjectName(_fromUtf8("actionOPENNI"))
        self.actionHakoyo = QtGui.QAction(MainWindow)
        self.actionHakoyo.setObjectName(_fromUtf8("actionHakoyo"))
        self.actionWith_two_motors = QtGui.QAction(MainWindow)
        self.actionWith_two_motors.setObjectName(_fromUtf8("actionWith_two_motors"))
        self.actionWith_four_motors = QtGui.QAction(MainWindow)
        self.actionWith_four_motors.setObjectName(_fromUtf8("actionWith_four_motors"))
        self.actionReconfig_RiC_Board = QtGui.QAction(MainWindow)
        self.actionReconfig_RiC_Board.setObjectName(_fromUtf8("actionReconfig_RiC_Board"))
        self.actionRobot_Model = QtGui.QAction(MainWindow)
        self.actionRobot_Model.setObjectName(_fromUtf8("actionRobot_Model"))
        self.actionAbout_RiC_Board = QtGui.QAction(MainWindow)
        self.actionAbout_RiC_Board.setObjectName(_fromUtf8("actionAbout_RiC_Board"))
        self.menuFlie.addAction(self.actionNew)
        self.menuFlie.addAction(self.actionOpen)
        self.menuFlie.addAction(self.actionSave)
        self.menuFlie.addSeparator()
        self.menuFlie.addAction(self.actionExit)
        self.menuClose_Loop.addAction(self.actionMotor_with_one_encoder)
        self.menuClose_Loop.addAction(self.actionMotor_with_two_encoder)
        self.menuMotors.addAction(self.actionOpen_Loop)
        self.menuMotors.addAction(self.menuClose_Loop.menuAction())
        self.menuClose_Loop_Drive.addAction(self.actionWith_two_motors)
        self.menuClose_Loop_Drive.addAction(self.actionWith_four_motors)
        self.menuDifferential_Drive.addAction(self.actionOpen_Loop_Drive)
        self.menuDifferential_Drive.addAction(self.menuClose_Loop_Drive.menuAction())
        self.menuRiC_Device.addAction(self.actionBattery_Monitor)
        self.menuRiC_Device.addAction(self.actionServo)
        self.menuRiC_Device.addAction(self.actionSwitch)
        self.menuRiC_Device.addAction(self.actionIMU)
        self.menuRiC_Device.addAction(self.actionPPM)
        self.menuRiC_Device.addAction(self.actionGPS)
        self.menuRiC_Device.addAction(self.actionRelay)
        self.menuRiC_Device.addAction(self.actionURF)
        self.menuRiC_Device.addAction(self.menuMotors.menuAction())
        self.menuRiC_Device.addAction(self.menuDifferential_Drive.menuAction())
        self.menuExternal_Device.addAction(self.actionUSB_Camera)
        self.menuExternal_Device.addAction(self.actionOPENNI)
        self.menuExternal_Device.addAction(self.actionHakoyo)
        self.menuOther.addAction(self.actionRobot_Model)
        self.menuAdd_Device.addAction(self.menuRiC_Device.menuAction())
        self.menuAdd_Device.addAction(self.menuExternal_Device.menuAction())
        self.menuAdd_Device.addAction(self.menuOther.menuAction())
        self.menuHelp.addAction(self.actionAbout_RIC)
        self.menuHelp.addAction(self.actionReconfig_RiC_Board)
        self.menuHelp.addAction(self.actionAbout_RiC_Board)
        self.menubar.addAction(self.menuFlie.menuAction())
        self.menubar.addAction(self.menuAdd_Device.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QObject.connect(self.actionExit, QtCore.SIGNAL(_fromUtf8("triggered()")), MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.nameSpace, self.devList)
        MainWindow.setTabOrder(self.devList, self.Edit)
        MainWindow.setTabOrder(self.Edit, self.Delete)
        MainWindow.setTabOrder(self.Delete, self.pushButton)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "Configurator", None))
        self.Edit.setText(_translate("MainWindow", "Edit", None))
        self.Delete.setText(_translate("MainWindow", "Delete", None))
        self.label.setText(_translate("MainWindow", "Device Fields:", None))
        self.label_2.setText(_translate("MainWindow", "Devices:", None))
        self.nameSpace.setToolTip(_translate("MainWindow", "<html><head/><body><p>Enter your name space</p></body></html>", None))
        self.nameSpace.setPlaceholderText(_translate("MainWindow", "Enter name space", None))
        self.label_3.setText(_translate("MainWindow", "Name Space:", None))
        self.pushButton.setText(_translate("MainWindow", "Apply", None))
        self.label_4.setText(_translate("MainWindow", "File Name:", None))
        self.fileName.setPlaceholderText(_translate("MainWindow", "Enter file name", None))
        self.menuFlie.setTitle(_translate("MainWindow", "Flie", None))
        self.menuAdd_Device.setTitle(_translate("MainWindow", "Add", None))
        self.menuRiC_Device.setTitle(_translate("MainWindow", "RiC Device", None))
        self.menuMotors.setTitle(_translate("MainWindow", "Motors", None))
        self.menuClose_Loop.setTitle(_translate("MainWindow", "Close Loop", None))
        self.menuDifferential_Drive.setTitle(_translate("MainWindow", "Differential Drive", None))
        self.menuClose_Loop_Drive.setTitle(_translate("MainWindow", "Close Loop Drive", None))
        self.menuExternal_Device.setTitle(_translate("MainWindow", "External Device", None))
        self.menuOther.setTitle(_translate("MainWindow", "Other", None))
        self.menuHelp.setTitle(_translate("MainWindow", "Help", None))
        self.actionNew.setText(_translate("MainWindow", "New", None))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N", None))
        self.actionOpen.setText(_translate("MainWindow", "Open", None))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O", None))
        self.actionSave.setText(_translate("MainWindow", "Save", None))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S", None))
        self.actionExit.setText(_translate("MainWindow", "Exit", None))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+E", None))
        self.actionAbout_RIC.setText(_translate("MainWindow", "RiC Board Wiki", None))
        self.actionRiC_Board_Ports.setText(_translate("MainWindow", "RiC Board Ports", None))
        self.actionRe_program_RiC_board.setText(_translate("MainWindow", "Re-program RiC board", None))
        self.actionBattery_Monitor.setText(_translate("MainWindow", "Battery Monitor", None))
        self.actionServo.setText(_translate("MainWindow", "Servo", None))
        self.actionSwitch.setText(_translate("MainWindow", "Switch", None))
        self.actionIMU.setText(_translate("MainWindow", "IMU", None))
        self.actionPPM.setText(_translate("MainWindow", "PPM", None))
        self.actionGPS.setText(_translate("MainWindow", "GPS", None))
        self.actionRelay.setText(_translate("MainWindow", "Relay", None))
        self.actionURF.setText(_translate("MainWindow", "URF", None))
        self.actionOpen_Loop.setText(_translate("MainWindow", "Open Loop", None))
        self.actionOpen_Loop_Drive.setText(_translate("MainWindow", "Open Loop Drive", None))
        self.actionMotor_with_one_encoder.setText(_translate("MainWindow", "motor with one encoder", None))
        self.actionMotor_with_two_encoder.setText(_translate("MainWindow", "motor with two encoder", None))
        self.actionUSB_Camera.setText(_translate("MainWindow", "USB Camera", None))
        self.actionOPENNI.setText(_translate("MainWindow", "Openni", None))
        self.actionHakoyo.setText(_translate("MainWindow", "Hokuyo", None))
        self.actionWith_two_motors.setText(_translate("MainWindow", "With two motors", None))
        self.actionWith_four_motors.setText(_translate("MainWindow", "With four motors", None))
        self.actionReconfig_RiC_Board.setText(_translate("MainWindow", "Reconfigure RiC Board", None))
        self.actionRobot_Model.setText(_translate("MainWindow", "Robot Model", None))
        self.actionAbout_RiC_Board.setText(_translate("MainWindow", "RiC Board Ports", None))

import resource_rc
